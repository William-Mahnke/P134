---
title: "PSTAT 134/234 Homework 3"
author: "William Mahnke"
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 4
    embed-resources: true
    theme: simplex
editor: visual
---

## Homework 3

**This is my first late submission**

![Star Trek ships.](star_trek.jpeg)

For this homework assignment, we'll be working with a dataset called [Spaceship Titanic](https://www.kaggle.com/competitions/spaceship-titanic/overview). It is a simulated dataset used for a popular Kaggle competition, intended to be similar to the very famous Titanic dataset. The premise of the Spaceship Titanic data is that it is currently the year 2912. You have received a transmission from four lightyears away, sent by the Spaceship Titanic, which was launched a month ago.

The Titanic set out with about 13,000 passengers who were emigrating from our solar system to three newly habitable exoplanets. However, it collided with a spacetime anomaly hidden in a dust cloud, and as a result, although the ship remained intact, half of the passengers on board were transported to an alternate dimension. Your challenge is to predict which passengers were transported, using records recovered from the spaceship's damaged computer system.

The dataset is provided in `/data`, along with a codebook describing each variable. You should read the dataset into your preferred coding language (R or Python) and familiarize yourself with each variable.

We will use this dataset for the purposes of practicing our data visualization and feature engineering skills.

```{r}
library(tidyverse)
library(ggplot2)
library(naniar)
library(statip)
library(corrplot)
library(tidymodels)

titanic <- read_csv("~/pstat-134-234/Homework/Homework 3/data/spaceship_titanic.csv")
```

### Exercise 1

Which variables have missing values? What percentage of these variables is missing? What percentage of the overall dataset is missing?

```{r}
vis_miss(titanic)
```

Every variable except for `PassengerId` and `Transported` have missing values. All of the variables with missing values have 2% of their data missing, and the entire data set has 1.9% missing.

### Exercise 2

Use mode imputation to fill in any missing values of `home_planet`, `cryo_sleep`, `destination`, and `vip`. Drop any observations with a missing value of `cabin` (there are too many possible values).

Use median imputation to fill in any missing values of `age`. Rather than imputing with the overall mean of `age`, impute with the median age of the corresponding `vip` group. (For example, if someone who is a VIP is missing their age, replace their missing age value with the median age of all passengers who are **also** VIPs).

For passengers missing any of the expenditure variables (`room_service`, `food_court`, `shopping_mall`, `spa`, or `vr_deck`), handle them in this way:

-   If all their observed expenditure values are $0$, **or** if they are in cryo-sleep, replace their missing value(s) with $0$.

-   For the remaining missing expenditure values, use mean imputation.

```{r}
titanic_cleaned <- titanic %>%
  # changing missing values for HomePlanet, CryoSleep, Destination, VIP, and Cabin
  mutate(HomePlanet = case_when(
    is.na(HomePlanet) ~ mfv(HomePlanet),
    .default = HomePlanet
  ),
  CryoSleep = case_when(
    is.na(CryoSleep) ~ mfv(CryoSleep),
    .default = CryoSleep
  ),
  Destination = case_when(
    is.na(Destination) ~ mfv(Destination),
    .default = Destination
  ),
  VIP = case_when(
    is.na(VIP) ~ mfv(VIP),
    .default = VIP
  )) %>%
  filter(is.na(Cabin) == F) %>%
  # mutating age
  mutate(Age = case_when(
    VIP == T & is.na(Age) ~ median(titanic$Age[titanic$VIP == T], na.rm = T),
    VIP == F & is.na(Age) ~ median(titanic$Age[titanic$VIP == F], na.rm = T),
    .default = Age
  ))

# creating helper column to track whether all non-NA expenditures are 0
titanic_cleaned <- titanic_cleaned %>%
  mutate(all_expenditures_zero = rowSums(across(c(RoomService, FoodCourt, ShoppingMall, Spa, VRDeck), ~ replace_na(., 0))) == 0)

# impute missing values and removing helper column when done
titanic_cleaned <- titanic_cleaned %>%
  mutate(across(c(RoomService, FoodCourt, ShoppingMall, Spa, VRDeck),
                ~ case_when(
                  is.na(.) & (CryoSleep == T | all_expenditures_zero == T) ~ 0,
                  is.na(.) & (CryoSleep == F & all_expenditures_zero == F) ~ mean(., na.rm = T),
                  .default = .
                ))) %>%
  select(-all_expenditures_zero)
```

```{r}
vis_miss(titanic_cleaned)
```

### Exercise 3

What are the proportions of both levels of the outcome variable, `transported`, in the dataset?

```{r}
prop_true <- mean(as.numeric(titanic_cleaned$Transported)) %>%
  print()

prop_false <- (1 - prop_true) %>%
  print()
```

Approximately 50.36% of the observations for `transported` are TRUE, thus approximately 49.64% are FALSE.

### Exercise 4

Make proportion stacked bar charts of each of the following. Describe what patterns, if any, you observe.

1.  `home_planet` and `transported`

2.  `cryo_sleep` and `transported`

3.  `destination` and `transported`

4.  `vip` and `transported`

```{r}
# home planet and transported
ggplot(titanic_cleaned, aes(x = HomePlanet)) + 
  geom_bar(aes(fill = Transported),
           position = 'fill') + 
  xlab("Home Planet") + ylab("") + scale_fill_discrete('Transported')
```

Passengers from Europa have the highest proportion of people who were transported, followed by Mars and then Earth.

```{r}
# cryosleep and transported
ggplot(titanic_cleaned, aes(x = CryoSleep)) + 
  geom_bar(aes(fill = Transported),
           position = 'fill') + 
  xlab("Cryo Sleep") + ylab("") + scale_fill_discrete('Transported')
```

A strong majority of passengers who were in Cryo Sleep were transported while the opposite is true for those who weren't in Cryo Sleep.

```{r}
# destination and transported
ggplot(titanic_cleaned, aes(x = Destination)) + 
  geom_bar(aes(fill = Transported),
           position = 'fill') + 
  xlab("Destination") + ylab("") + scale_fill_discrete('Transported')
```

Passengers with a destination of 55 Cancri e have the highest proportion of those who were transported, followed by PSO J318.5-22 and then TRAPPIST-1e.

```{r}
# VIP and transported
ggplot(titanic_cleaned, aes(x = VIP)) + 
  geom_bar(aes(fill = Transported),
           position = 'fill') + 
  xlab("VIP") + ylab("") + scale_fill_discrete('Transported')
```

Oddly, more people who didn't have VIP status were transported than those with VIP status.

### Exercise 5

Using box plots, density curves, histograms, dot plots, or violin plots, compare the distributions of the following and describe what patterns you observe, if any.

1.  `age` across levels of `transported`

2.  `room_service` across levels of `transported`

3.  `spa` across levels of `transported`

4.  `vr_deck` across levels of `transported`

```{r}
# age across levels of transported
ggplot(titanic_cleaned, aes(x = Age, color = Transported)) + 
  geom_density(linewidth = 0.75, alpha = 0.2) + 
  labs(title = "Distribution of Age", subtitle = "Organized by Transported") + 
  ylab("")
```

The distribution of the age for those who were transported and those who weren't doesn't show any significant patterns. The distribution of `Age` for both levels of `Transported` are very similar with the only major differences being at the ages 0-10 and 20-30.

```{r}
# room service across levels of transported
ggplot(titanic_cleaned, aes(x = log1p(Spa), color = Transported)) + 
  geom_density(linewidth = 0.75, alpha = 0.2) + 
  labs(title = "Distribution of RoomService", subtitle = "Organized by Transported") + 
  ylab("")

# boxplot version
ggplot(titanic_cleaned, aes(x = Transported, y = RoomService)) +
  geom_boxplot() +
  labs(title = 'Money spent on Room Service') +
  ylab("")
```

The boxplots show most of the observations for room service are 0 with the nonzero nonzero outliers being evenly spread out. The plot suggests that a majority of passengers did spend anything on room service while those who did spent varying amounts. The range of `RoomService` when `Transported = TRUE` is about half of when `Transported = FALSE`, but the distribution of outliers follows a similar structure to the other level.

```{r}
ggplot(titanic_cleaned, aes(x = Transported, y = Spa)) +
  geom_boxplot() +
  labs(title = "Money spent on Spa") +
  ylab("")
```

```{r}
ggplot(titanic_cleaned, aes(x = Transported, y = VRDeck)) +
  geom_boxplot() +
  labs(title = "Money spent on VRDeck") +
  ylab("")
```

The box plots for expenditures on `Spa` and `VRDeck` show a similar pattern that was seen in the plot for `RoomService`. Most of the observations are 0, while the range of outliers when `Transported = FALSE` is significantly larger than when `Transported = FALSE` (about five times larger in the case of `Spa` and `VRDeck`).

### Exercise 6

Make a correlogram of the continuous variables in the dataset. What do you observe?

```{r}
corr <- titanic_cleaned %>%
  select(c('Age','RoomService','FoodCourt','ShoppingMall','Spa','VRDeck')) %>%
  cor(use = 'everything')

corrplot(corr, method = 'number', type = 'upper', diag = F)
```

There's very little correlation between the continuous variables, including all of the variables that make up the passengers' expenditures.

### Exercise 7

Use binning to divide the feature `age` into six groups: ages 0-12, 13-17, 18-25, 26-30, 31-50, and 51+.

```{r}
# binning age into six groups 
titanic_cleaned <- titanic_cleaned %>%
  mutate(Age = case_when(
    Age <= 12 ~ '0-12',
    Age > 12 & Age < 18 ~ '13-17',
    Age > 17 & Age < 26 ~ '18-25',
    Age > 25 & Age < 31 ~ '26-30',
    Age > 30 & Age < 51 ~ '31-50',
    Age > 50 ~ '51+'
  ))

titanic_cleaned$Age <- as.factor(titanic_cleaned$Age)
```

### Exercise 8

For the expenditure variables, do the following:

-   Create a new feature that consists of the total expenditure across all five amenities;

-   Create a binary feature to flag passengers who did not spend anything (a total expenditure of 0);

-   Log-transform the total expenditure to reduce skew.

```{r}
# creating total_expenditures
titanic_cleaned <- titanic_cleaned %>%
  mutate(total_expenditure = rowSums(across(c(RoomService,FoodCourt,ShoppingMall,Spa,VRDeck))))

# binary feature for total_expenditures
titanic_cleaned <- titanic_cleaned %>%
  mutate(total_expenditure_zero = case_when(
    total_expenditure == 0 ~ TRUE,
    total_expenditure > 0 ~ FALSE
  ))

# log transforming total_expenditures
titanic_cleaned$total_expenditure <- log1p(titanic_cleaned$total_expenditure)
# values of 0 are transformed into -inf, will handle later if necessary
```

### Exercise 9

Using the `passenger_id` column, create a new binary-coded feature that represents whether a passenger was traveling alone or not. Make a proportion stacked bar chart of this feature and `transported`. What do you observe?

```{r}
titanic_cleaned <- titanic_cleaned %>%
  # creating column for first four digits
  mutate(first_four = substr(PassengerId, 1, 4)) %>%
  # variable for number of passengers with those first four digits
  mutate(first_four_size = ave(first_four, first_four, FUN = length)) %>%
  # creating variable for whether traveling alone or not
  mutate(Alone = case_when(
    first_four_size == 1 ~ T,
    first_four_size > 1 ~ F
  )) %>%
  select(-c(first_four,first_four_size))
```

```{r}
# stacked bar plot for transported
ggplot(titanic_cleaned, aes(x = Alone)) +
  geom_bar(aes(fill = Transported), 
           position = 'fill') +
  labs(title = 'Transported Rate for Solo & Group Passengers') +
  ylab("")
```

The proportion of those who are traveling alone that are transported is lower than passengers who are traveling in a group.

### Exercise 10

Using the `cabin` variable, extract:

1.  Cabin deck (A, B, C, D, E, F, G, or T);
2.  Cabin number (0 to 2000);
3.  Cabin side (P or S).

```{r}
# create empty values for cabin deck, cabin number, and cabin side to fill
# could generalize length for any data frame, but nrows(titanic_cleaned) = 8494
titanic_cleaned <- titanic_cleaned %>%
  mutate(Deck = rep(NA, 8494)) %>%
  mutate(Number = rep(NA, 8494)) %>%
  mutate(Side = rep(NA, 8494))

# iterate through to fill values
for (i in 1:8494){
  titanic_cleaned$Deck[i] <- strsplit(titanic_cleaned$Cabin[i], split = '/')[[1]][1]
  titanic_cleaned$Number[i] <- strsplit(titanic_cleaned$Cabin[i], split = '/')[[1]][2]
  titanic_cleaned$Side[i] <- strsplit(titanic_cleaned$Cabin[i], split = '/')[[1]][3]
}

# convert cabin number to numeric for next step
titanic_cleaned$Number <- as.numeric(titanic_cleaned$Number)
```

Then do the following:

-   Drop any observations with a cabin deck of T;

-   Bin cabin number into groups of 300 (for example, 0 - 300, 301 - 600, 601- 900, etc.).

```{r}
# dropping observations with T and binning cabin number
titanic_cleaned <- titanic_cleaned %>%
  filter(Deck != 'T') %>%
  mutate(Number = case_when(
    Number < 301 ~ '0-300',
    Number > 300 & Number < 601 ~ '301-600',
    Number > 600 & Number < 901 ~ '601-900',
    Number > 900 & Number < 1201 ~ '901-1200',
    Number > 1200 & Number < 1501 ~ '1201-1500',
    Number > 1500 & Number < 1801 ~ '1501-1800',
    Number > 1800 ~ '1801-2000'
  )) %>%
  mutate(Number = as.factor(Number))
```

### Exercise 11

Create a new data frame (or tibble) that retains the following features:

1.  `home_planet`
2.  cabin deck
3.  cabin number (binned)
4.  cabin side
5.  `age` (binned)
6.  total expenditures (log-transformed)
7.  `cryo_sleep`
8.  `destination`
9.  whether the passenger was traveling alone (call this `solo`)

To those features, do the following:

-   One-hot encode all categorical features

-   Center and scale all continuous features

```{r}
# new data frame with specific variables from titanic_cleaned
titanic_final <- titanic_cleaned %>%
  select(HomePlanet,Deck,Number,Side,Age,total_expenditure,CryoSleep,Destination,Alone,Transported) %>%
  `colnames<-`(c('Home Planet','Deck','Cabin Number','Side','Age','Total','CryoSleep','Destination','Solo','Transported'))

# one-hot encoding and centering & scaling
titanic_recipe <- recipe(Transported ~ .,
                         data = titanic_final) %>%
  step_dummy(all_nominal_predictors(), one_hot = T) %>%
  step_scale(all_numeric_predictors())
```

### Exercise 12

Write up your analyses thus far in one or two paragraphs. Describe what you have learned about the passengers on the Spaceship Titanic. Describe the relationships you observed between variables. Which features do you think may be the best predictors of transported status? Why or why not?

The data set shows that the split between passengers who were transported and those who weren't is very even. Investigating which passengers were transported reveals that a strong majority of passengers who were in Cryo Sleep were transported while the opposite holds for those not in Cryo Sleep. Looking at passengers home planet's and destinations didn't show much difference between the locations except for Europa (as a home planet) having a slightly higher proportion of passengers who were transported. Strangely, VIP passengers had a lower rate of being transported than those without VIP status and those traveling in groups didn't have a much higher proportion of transported passengers. 
The distribution of different expenditures for passengers showed that a majority of passengers, transported or not, didn't spend anything. For the passengers who spent money on any of the five expenditures, the range of values for those who weren't transported were about four to five times larger for passengers who were transported. This analysis showed that different expenditures for passengers weren't strongly correlated. 
After investigating the relationships between variables, it seems like `CryoSleep` and different expenditure variables would be the best predictors for transported status. As discussed earlier, `CryoSleep = T` has a significantly higher proportion of transported passengers than the other level. Additionally, the wider range of observed expenditure values for `Transported = F` would be a helpful indicator of whether passengers were transported or not. 

### Exercises for 234 Students

#### Exercise 13

Split the dataset into training and testing. Use random sampling. Make sure that $80\%$ of observations are in the training set and the remaining $20\%$ in the testing set.

#### Exercise 14

Using *k*-fold cross-validation with *k* of 5, tune two models:

1.  A random forest;
2.  An elastic net.

#### Exercise 15

Select your best **random forest** model and use it to predict your testing set. Present the following:

-   Testing accuracy;

-   Testing ROC curve (and area under the ROC curve);

-   Confusion matrix;

-   Variable importance plot.

#### Exercise 16

Write up your conclusions in one to two paragraphs. Answer the following: How did your models do? Are you happy with their performance? Is there another model (besides these two) that you would be interested in trying? Which features ended up being the most important in terms of predicting whether or not a passenger would be transported?
